//
//  HomeViewController.swift
//  JambaJuice
//
//  Created by Eneko Alonso on 4/15/15.
//  Copyright (c) 2015 Jamba Juice. All rights reserved.
//

import UIKit
import HDK

private var instance: HomeViewController?

class HomeViewController: UIViewController {

    private let orderMenuSegue = "OrderMenuSegue"
    private let storesMenuSegue = "StoresMenuSegue"
    private let orderConfirmationSegue = "OrderConfirmationSegue"
    private let signedInVCEmbeddedSegue = "SignedInMainVC"
    private let nonSignedInVCEmbeddedSegue = "NonSignedInMainVC"
    private var lastScreenSegue: String?
    
    private let menuDefaultColor = UIColor(hex: Constants.jambaBrownColor)
    private let menuInactiveColor = UIColor(hex: Constants.jambaLightBrownColor)
    
    @IBOutlet weak var orderMenuButton: UIButton!
    @IBOutlet weak var storesMenuButton: UIButton!

    @IBOutlet weak var signedInMainContainerView: UIView!
    @IBOutlet weak var nonSignedInMainContainerView: UIView!
    
    weak var nonSignedInMainVC: NonSignedInViewController?
    
    class func sharedInstance() -> HomeViewController {
        if instance == nil {
            instance = HomeViewController() // Should never be called
        }
        return instance!
    }

    override func viewDidLoad() {
        super.viewDidLoad()

        orderMenuButton.setTitleColor(menuDefaultColor, forState: UIControlState.Normal)
        storesMenuButton.setTitleColor(menuDefaultColor, forState: UIControlState.Normal)
        
        // Override instance, if any
        instance = self

        //Setup Logged In Notification
        NSNotificationCenter.defaultCenter().addObserver(self, selector: "loggedInStateChanged:", name: JambaNotification.LoggedInStateChanged.rawValue, object: nil)
        loggedInStateChanged(nil)
        
        // Attach basket controller to main window
        BasketFlagViewController.sharedInstance.attachToMainWindow()
        StatusBarStyleManager.pushStyle(.Default, viewController: self)
    }

    override func viewDidAppear(animated: Bool) {
        super.viewDidAppear(animated)
        trackScreenView()
<<<<<<< HEAD
        // Free splash screen from memory
=======
        // Free any previous screens from memory
>>>>>>> d8ac9b3f169fe49cdd3d1bd6fd28fcae1aea8615
        if navigationController?.viewControllers.count > 1 {
            navigationController?.setViewControllers([self], animated: false)
        }
    }

    deinit {
        NSNotificationCenter.defaultCenter().removeObserver(self)
        StatusBarStyleManager.popStyle(self)
    }
    
    func loggedInStateChanged(notification: NSNotification?) {
        let loggedIn = UserService.sharedUser != nil
        nonSignedInMainContainerView.hidden = loggedIn
        signedInMainContainerView.hidden = !loggedIn
    }
    
    // MARK: - Navigation
    
    override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) {
        if let identifier = segue.identifier {
            switch identifier {
            case orderMenuSegue:
                lastScreenSegue = orderMenuSegue
                storesMenuButton.setTitleColor(menuInactiveColor,  forState: UIControlState.Normal)
            case storesMenuSegue:
                lastScreenSegue = storesMenuSegue
                orderMenuButton.setTitleColor(menuInactiveColor, forState: UIControlState.Normal)
            case nonSignedInVCEmbeddedSegue:
                nonSignedInMainVC = segue.destinationViewController as? NonSignedInViewController
            default: break
            }
        }
    }

    /// Closes a main navigation screen, with completion callback
    func closeModalScreen(complete: (() -> Void)? = nil) {
        if presentedViewController == nil {
            complete?()
            return
        }
        
        // Restore menu colors
        orderMenuButton.setTitleColor(menuDefaultColor,  forState: UIControlState.Normal)
        storesMenuButton.setTitleColor(menuDefaultColor, forState: UIControlState.Normal)        
        dismissViewControllerAnimated(true, completion: complete)
    }

    /// Opens the last main navigation screen opened by the user, if any
    func openLastScreen() {
        if presentedViewController != nil || lastScreenSegue == nil {
            return
        }
        performSegueWithIdentifier(lastScreenSegue, sender: self)
    }
    
    /// Open Menu Landign screen, closing other menu screens if needed
    func openOrderScreen() {
        closeModalScreen() {
            self.performSegueWithIdentifier(self.orderMenuSegue, sender: self)
        }
    }
    
    /// Open Store Locator screen, closing other menu screens if needed
    func openStoresScreen() {
        closeModalScreen() {
            self.performSegueWithIdentifier(self.storesMenuSegue, sender: self)
        }
    }

    /// Open Login screen
    func openLoginScreen() {
        closeModalScreen {
            if self.nonSignedInMainContainerView.hidden == false && self.nonSignedInMainVC != nil {
                self.nonSignedInMainVC!.performSegueWithIdentifier("LoginSegue", sender: self)
            }
        }
    }

    /// Open SignUp screen
    func openSignUpScreen() {
        closeModalScreen {
            if self.nonSignedInMainContainerView.hidden == false && self.nonSignedInMainVC != nil {
                self.nonSignedInMainVC!.performSegueWithIdentifier("SignUpSegue", sender: self)
            }
        }
    }
    
}
